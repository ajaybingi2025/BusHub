// Generated by view binder compiler. Do not edit!
package com.example.bushub.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bushub.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BusAvailabilityBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView garuda;

  @NonNull
  public final ImageView hamburgerMenu;

  @NonNull
  public final TextView hello;

  @NonNull
  public final TextView rajadhani;

  @NonNull
  public final TextView superluxury;

  @NonNull
  public final TextView volvo;

  private BusAvailabilityBinding(@NonNull LinearLayout rootView, @NonNull TextView garuda,
      @NonNull ImageView hamburgerMenu, @NonNull TextView hello, @NonNull TextView rajadhani,
      @NonNull TextView superluxury, @NonNull TextView volvo) {
    this.rootView = rootView;
    this.garuda = garuda;
    this.hamburgerMenu = hamburgerMenu;
    this.hello = hello;
    this.rajadhani = rajadhani;
    this.superluxury = superluxury;
    this.volvo = volvo;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BusAvailabilityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BusAvailabilityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bus_availability, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BusAvailabilityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.garuda_;
      TextView garuda = ViewBindings.findChildViewById(rootView, id);
      if (garuda == null) {
        break missingId;
      }

      id = R.id.hamburgerMenu;
      ImageView hamburgerMenu = ViewBindings.findChildViewById(rootView, id);
      if (hamburgerMenu == null) {
        break missingId;
      }

      id = R.id.hello;
      TextView hello = ViewBindings.findChildViewById(rootView, id);
      if (hello == null) {
        break missingId;
      }

      id = R.id.rajadhani_;
      TextView rajadhani = ViewBindings.findChildViewById(rootView, id);
      if (rajadhani == null) {
        break missingId;
      }

      id = R.id.superluxury_;
      TextView superluxury = ViewBindings.findChildViewById(rootView, id);
      if (superluxury == null) {
        break missingId;
      }

      id = R.id.volvo_;
      TextView volvo = ViewBindings.findChildViewById(rootView, id);
      if (volvo == null) {
        break missingId;
      }

      return new BusAvailabilityBinding((LinearLayout) rootView, garuda, hamburgerMenu, hello,
          rajadhani, superluxury, volvo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
